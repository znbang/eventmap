// @generated by protoc-gen-es v2.2.4 with parameter "target=js+dts"
// @generated from file event/v1/event.proto (package event.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file event/v1/event.proto.
 */
export declare const file_event_v1_event: GenFile;

/**
 * @generated from message event.v1.Event
 */
export declare type Event = Message<"event.v1.Event"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_date = 3;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_date = 4;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * @generated from field: string location = 6;
   */
  location: string;

  /**
   * @generated from field: string url = 7;
   */
  url: string;

  /**
   * @generated from field: string detail = 8;
   */
  detail: string;

  /**
   * @generated from field: double lat = 9;
   */
  lat: number;

  /**
   * @generated from field: double lng = 10;
   */
  lng: number;

  /**
   * @generated from field: int32 zoom = 11;
   */
  zoom: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 13;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message event.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export declare const EventSchema: GenMessage<Event>;

/**
 * @generated from message event.v1.CreateEventRequest
 */
export declare type CreateEventRequest = Message<"event.v1.CreateEventRequest"> & {
  /**
   * @generated from field: google.protobuf.Timestamp start_date = 1;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_date = 2;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string location = 4;
   */
  location: string;

  /**
   * @generated from field: string url = 5;
   */
  url: string;

  /**
   * @generated from field: string detail = 6;
   */
  detail: string;

  /**
   * @generated from field: double lat = 7;
   */
  lat: number;

  /**
   * @generated from field: double lng = 8;
   */
  lng: number;

  /**
   * @generated from field: int32 zoom = 9;
   */
  zoom: number;
};

/**
 * Describes the message event.v1.CreateEventRequest.
 * Use `create(CreateEventRequestSchema)` to create a new message.
 */
export declare const CreateEventRequestSchema: GenMessage<CreateEventRequest>;

/**
 * @generated from message event.v1.CreateEventResponse
 */
export declare type CreateEventResponse = Message<"event.v1.CreateEventResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message event.v1.CreateEventResponse.
 * Use `create(CreateEventResponseSchema)` to create a new message.
 */
export declare const CreateEventResponseSchema: GenMessage<CreateEventResponse>;

/**
 * @generated from message event.v1.UpdateEventRequest
 */
export declare type UpdateEventRequest = Message<"event.v1.UpdateEventRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_date = 2;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_date = 3;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string location = 5;
   */
  location: string;

  /**
   * @generated from field: string url = 6;
   */
  url: string;

  /**
   * @generated from field: string detail = 7;
   */
  detail: string;

  /**
   * @generated from field: double lat = 8;
   */
  lat: number;

  /**
   * @generated from field: double lng = 9;
   */
  lng: number;

  /**
   * @generated from field: int32 zoom = 10;
   */
  zoom: number;
};

/**
 * Describes the message event.v1.UpdateEventRequest.
 * Use `create(UpdateEventRequestSchema)` to create a new message.
 */
export declare const UpdateEventRequestSchema: GenMessage<UpdateEventRequest>;

/**
 * @generated from message event.v1.UpdateEventResponse
 */
export declare type UpdateEventResponse = Message<"event.v1.UpdateEventResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message event.v1.UpdateEventResponse.
 * Use `create(UpdateEventResponseSchema)` to create a new message.
 */
export declare const UpdateEventResponseSchema: GenMessage<UpdateEventResponse>;

/**
 * @generated from message event.v1.DeleteEventRequest
 */
export declare type DeleteEventRequest = Message<"event.v1.DeleteEventRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message event.v1.DeleteEventRequest.
 * Use `create(DeleteEventRequestSchema)` to create a new message.
 */
export declare const DeleteEventRequestSchema: GenMessage<DeleteEventRequest>;

/**
 * @generated from message event.v1.DeleteEventResponse
 */
export declare type DeleteEventResponse = Message<"event.v1.DeleteEventResponse"> & {
};

/**
 * Describes the message event.v1.DeleteEventResponse.
 * Use `create(DeleteEventResponseSchema)` to create a new message.
 */
export declare const DeleteEventResponseSchema: GenMessage<DeleteEventResponse>;

/**
 * @generated from message event.v1.GetEventRequest
 */
export declare type GetEventRequest = Message<"event.v1.GetEventRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message event.v1.GetEventRequest.
 * Use `create(GetEventRequestSchema)` to create a new message.
 */
export declare const GetEventRequestSchema: GenMessage<GetEventRequest>;

/**
 * @generated from message event.v1.GetEventResponse
 */
export declare type GetEventResponse = Message<"event.v1.GetEventResponse"> & {
  /**
   * @generated from field: event.v1.Event event = 1;
   */
  event?: Event;
};

/**
 * Describes the message event.v1.GetEventResponse.
 * Use `create(GetEventResponseSchema)` to create a new message.
 */
export declare const GetEventResponseSchema: GenMessage<GetEventResponse>;

/**
 * @generated from message event.v1.ListEventRequest
 */
export declare type ListEventRequest = Message<"event.v1.ListEventRequest"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message event.v1.ListEventRequest.
 * Use `create(ListEventRequestSchema)` to create a new message.
 */
export declare const ListEventRequestSchema: GenMessage<ListEventRequest>;

/**
 * @generated from message event.v1.ListEventResponse
 */
export declare type ListEventResponse = Message<"event.v1.ListEventResponse"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * @generated from field: repeated event.v1.Event items = 4;
   */
  items: Event[];
};

/**
 * Describes the message event.v1.ListEventResponse.
 * Use `create(ListEventResponseSchema)` to create a new message.
 */
export declare const ListEventResponseSchema: GenMessage<ListEventResponse>;

/**
 * @generated from message event.v1.ListActiveEventRequest
 */
export declare type ListActiveEventRequest = Message<"event.v1.ListActiveEventRequest"> & {
};

/**
 * Describes the message event.v1.ListActiveEventRequest.
 * Use `create(ListActiveEventRequestSchema)` to create a new message.
 */
export declare const ListActiveEventRequestSchema: GenMessage<ListActiveEventRequest>;

/**
 * @generated from message event.v1.ListActiveEventResponse
 */
export declare type ListActiveEventResponse = Message<"event.v1.ListActiveEventResponse"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * @generated from field: repeated event.v1.Event items = 4;
   */
  items: Event[];
};

/**
 * Describes the message event.v1.ListActiveEventResponse.
 * Use `create(ListActiveEventResponseSchema)` to create a new message.
 */
export declare const ListActiveEventResponseSchema: GenMessage<ListActiveEventResponse>;

/**
 * @generated from message event.v1.ListUserEventRequest
 */
export declare type ListUserEventRequest = Message<"event.v1.ListUserEventRequest"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message event.v1.ListUserEventRequest.
 * Use `create(ListUserEventRequestSchema)` to create a new message.
 */
export declare const ListUserEventRequestSchema: GenMessage<ListUserEventRequest>;

/**
 * @generated from message event.v1.ListUserEventResponse
 */
export declare type ListUserEventResponse = Message<"event.v1.ListUserEventResponse"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * @generated from field: repeated event.v1.Event items = 4;
   */
  items: Event[];
};

/**
 * Describes the message event.v1.ListUserEventResponse.
 * Use `create(ListUserEventResponseSchema)` to create a new message.
 */
export declare const ListUserEventResponseSchema: GenMessage<ListUserEventResponse>;

/**
 * @generated from service event.v1.EventService
 */
export declare const EventService: GenService<{
  /**
   * @generated from rpc event.v1.EventService.CreateEvent
   */
  createEvent: {
    methodKind: "unary";
    input: typeof CreateEventRequestSchema;
    output: typeof CreateEventResponseSchema;
  },
  /**
   * @generated from rpc event.v1.EventService.UpdateEvent
   */
  updateEvent: {
    methodKind: "unary";
    input: typeof UpdateEventRequestSchema;
    output: typeof UpdateEventResponseSchema;
  },
  /**
   * @generated from rpc event.v1.EventService.DeleteEvent
   */
  deleteEvent: {
    methodKind: "unary";
    input: typeof DeleteEventRequestSchema;
    output: typeof DeleteEventResponseSchema;
  },
  /**
   * @generated from rpc event.v1.EventService.GetEvent
   */
  getEvent: {
    methodKind: "unary";
    input: typeof GetEventRequestSchema;
    output: typeof GetEventResponseSchema;
  },
  /**
   * @generated from rpc event.v1.EventService.ListActiveEvent
   */
  listActiveEvent: {
    methodKind: "unary";
    input: typeof ListActiveEventRequestSchema;
    output: typeof ListActiveEventResponseSchema;
  },
  /**
   * @generated from rpc event.v1.EventService.ListEvent
   */
  listEvent: {
    methodKind: "unary";
    input: typeof ListEventRequestSchema;
    output: typeof ListEventResponseSchema;
  },
  /**
   * @generated from rpc event.v1.EventService.ListUserEvent
   */
  listUserEvent: {
    methodKind: "unary";
    input: typeof ListUserEventRequestSchema;
    output: typeof ListUserEventResponseSchema;
  },
}>;


// @generated by protoc-gen-es v2.2.4 with parameter "target=js+dts"
// @generated from file book/v1/book.proto (package book.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file book/v1/book.proto.
 */
export declare const file_book_v1_book: GenFile;

/**
 * @generated from message book.v1.Book
 */
export declare type Book = Message<"book.v1.Book"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: string author = 4;
   */
  author: string;

  /**
   * @generated from field: string url = 5;
   */
  url: string;

  /**
   * @generated from field: book.v1.BookJob job = 6;
   */
  job?: BookJob;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message book.v1.Book.
 * Use `create(BookSchema)` to create a new message.
 */
export declare const BookSchema: GenMessage<Book>;

/**
 * @generated from message book.v1.Chapter
 */
export declare type Chapter = Message<"book.v1.Chapter"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string book_id = 2;
   */
  bookId: string;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: string url = 4;
   */
  url: string;

  /**
   * @generated from field: string title = 5;
   */
  title: string;

  /**
   * @generated from field: string body = 6;
   */
  body: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message book.v1.Chapter.
 * Use `create(ChapterSchema)` to create a new message.
 */
export declare const ChapterSchema: GenMessage<Chapter>;

/**
 * @generated from message book.v1.BookJob
 */
export declare type BookJob = Message<"book.v1.BookJob"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: book.v1.BookJobStatus status = 2;
   */
  status: BookJobStatus;

  /**
   * @generated from field: string book_id = 3;
   */
  bookId: string;

  /**
   * @generated from field: string message = 4;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message book.v1.BookJob.
 * Use `create(BookJobSchema)` to create a new message.
 */
export declare const BookJobSchema: GenMessage<BookJob>;

/**
 * @generated from message book.v1.CreateBookRequest
 */
export declare type CreateBookRequest = Message<"book.v1.CreateBookRequest"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string author = 2;
   */
  author: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;
};

/**
 * Describes the message book.v1.CreateBookRequest.
 * Use `create(CreateBookRequestSchema)` to create a new message.
 */
export declare const CreateBookRequestSchema: GenMessage<CreateBookRequest>;

/**
 * @generated from message book.v1.CreateBookResponse
 */
export declare type CreateBookResponse = Message<"book.v1.CreateBookResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.CreateBookResponse.
 * Use `create(CreateBookResponseSchema)` to create a new message.
 */
export declare const CreateBookResponseSchema: GenMessage<CreateBookResponse>;

/**
 * @generated from message book.v1.UpdateBookRequest
 */
export declare type UpdateBookRequest = Message<"book.v1.UpdateBookRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string author = 3;
   */
  author: string;

  /**
   * @generated from field: string url = 4;
   */
  url: string;
};

/**
 * Describes the message book.v1.UpdateBookRequest.
 * Use `create(UpdateBookRequestSchema)` to create a new message.
 */
export declare const UpdateBookRequestSchema: GenMessage<UpdateBookRequest>;

/**
 * @generated from message book.v1.UpdateBookResponse
 */
export declare type UpdateBookResponse = Message<"book.v1.UpdateBookResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.UpdateBookResponse.
 * Use `create(UpdateBookResponseSchema)` to create a new message.
 */
export declare const UpdateBookResponseSchema: GenMessage<UpdateBookResponse>;

/**
 * @generated from message book.v1.DeleteBookRequest
 */
export declare type DeleteBookRequest = Message<"book.v1.DeleteBookRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.DeleteBookRequest.
 * Use `create(DeleteBookRequestSchema)` to create a new message.
 */
export declare const DeleteBookRequestSchema: GenMessage<DeleteBookRequest>;

/**
 * @generated from message book.v1.DeleteBookResponse
 */
export declare type DeleteBookResponse = Message<"book.v1.DeleteBookResponse"> & {
};

/**
 * Describes the message book.v1.DeleteBookResponse.
 * Use `create(DeleteBookResponseSchema)` to create a new message.
 */
export declare const DeleteBookResponseSchema: GenMessage<DeleteBookResponse>;

/**
 * @generated from message book.v1.DeleteChapterRequest
 */
export declare type DeleteChapterRequest = Message<"book.v1.DeleteChapterRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 page = 2;
   */
  page: number;
};

/**
 * Describes the message book.v1.DeleteChapterRequest.
 * Use `create(DeleteChapterRequestSchema)` to create a new message.
 */
export declare const DeleteChapterRequestSchema: GenMessage<DeleteChapterRequest>;

/**
 * @generated from message book.v1.DeleteChapterResponse
 */
export declare type DeleteChapterResponse = Message<"book.v1.DeleteChapterResponse"> & {
};

/**
 * Describes the message book.v1.DeleteChapterResponse.
 * Use `create(DeleteChapterResponseSchema)` to create a new message.
 */
export declare const DeleteChapterResponseSchema: GenMessage<DeleteChapterResponse>;

/**
 * @generated from message book.v1.GetBookRequest
 */
export declare type GetBookRequest = Message<"book.v1.GetBookRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.GetBookRequest.
 * Use `create(GetBookRequestSchema)` to create a new message.
 */
export declare const GetBookRequestSchema: GenMessage<GetBookRequest>;

/**
 * @generated from message book.v1.GetBookResponse
 */
export declare type GetBookResponse = Message<"book.v1.GetBookResponse"> & {
  /**
   * @generated from field: book.v1.Book book = 1;
   */
  book?: Book;
};

/**
 * Describes the message book.v1.GetBookResponse.
 * Use `create(GetBookResponseSchema)` to create a new message.
 */
export declare const GetBookResponseSchema: GenMessage<GetBookResponse>;

/**
 * @generated from message book.v1.GetTocRequest
 */
export declare type GetTocRequest = Message<"book.v1.GetTocRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 page = 2;
   */
  page: number;

  /**
   * @generated from field: int32 size = 3;
   */
  size: number;
};

/**
 * Describes the message book.v1.GetTocRequest.
 * Use `create(GetTocRequestSchema)` to create a new message.
 */
export declare const GetTocRequestSchema: GenMessage<GetTocRequest>;

/**
 * @generated from message book.v1.GetTocResponse
 */
export declare type GetTocResponse = Message<"book.v1.GetTocResponse"> & {
  /**
   * @generated from field: book.v1.Book book = 1;
   */
  book?: Book;

  /**
   * @generated from field: int32 page = 2;
   */
  page: number;

  /**
   * @generated from field: int32 size = 3;
   */
  size: number;

  /**
   * @generated from field: int32 total = 4;
   */
  total: number;

  /**
   * @generated from field: repeated book.v1.Chapter items = 5;
   */
  items: Chapter[];
};

/**
 * Describes the message book.v1.GetTocResponse.
 * Use `create(GetTocResponseSchema)` to create a new message.
 */
export declare const GetTocResponseSchema: GenMessage<GetTocResponse>;

/**
 * @generated from message book.v1.GetChapterRequest
 */
export declare type GetChapterRequest = Message<"book.v1.GetChapterRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 page = 2;
   */
  page: number;
};

/**
 * Describes the message book.v1.GetChapterRequest.
 * Use `create(GetChapterRequestSchema)` to create a new message.
 */
export declare const GetChapterRequestSchema: GenMessage<GetChapterRequest>;

/**
 * @generated from message book.v1.GetChapterResponse
 */
export declare type GetChapterResponse = Message<"book.v1.GetChapterResponse"> & {
  /**
   * @generated from field: book.v1.Book book = 1;
   */
  book?: Book;

  /**
   * @generated from field: book.v1.Chapter chapter = 2;
   */
  chapter?: Chapter;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: int32 total = 4;
   */
  total: number;
};

/**
 * Describes the message book.v1.GetChapterResponse.
 * Use `create(GetChapterResponseSchema)` to create a new message.
 */
export declare const GetChapterResponseSchema: GenMessage<GetChapterResponse>;

/**
 * @generated from message book.v1.ListBookRequest
 */
export declare type ListBookRequest = Message<"book.v1.ListBookRequest"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message book.v1.ListBookRequest.
 * Use `create(ListBookRequestSchema)` to create a new message.
 */
export declare const ListBookRequestSchema: GenMessage<ListBookRequest>;

/**
 * @generated from message book.v1.ListBookResponse
 */
export declare type ListBookResponse = Message<"book.v1.ListBookResponse"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * @generated from field: repeated book.v1.Book items = 4;
   */
  items: Book[];
};

/**
 * Describes the message book.v1.ListBookResponse.
 * Use `create(ListBookResponseSchema)` to create a new message.
 */
export declare const ListBookResponseSchema: GenMessage<ListBookResponse>;

/**
 * @generated from message book.v1.SyncNewRequest
 */
export declare type SyncNewRequest = Message<"book.v1.SyncNewRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.SyncNewRequest.
 * Use `create(SyncNewRequestSchema)` to create a new message.
 */
export declare const SyncNewRequestSchema: GenMessage<SyncNewRequest>;

/**
 * @generated from message book.v1.SyncNewResponse
 */
export declare type SyncNewResponse = Message<"book.v1.SyncNewResponse"> & {
};

/**
 * Describes the message book.v1.SyncNewResponse.
 * Use `create(SyncNewResponseSchema)` to create a new message.
 */
export declare const SyncNewResponseSchema: GenMessage<SyncNewResponse>;

/**
 * @generated from message book.v1.SyncAllRequest
 */
export declare type SyncAllRequest = Message<"book.v1.SyncAllRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.SyncAllRequest.
 * Use `create(SyncAllRequestSchema)` to create a new message.
 */
export declare const SyncAllRequestSchema: GenMessage<SyncAllRequest>;

/**
 * @generated from message book.v1.SyncAllResponse
 */
export declare type SyncAllResponse = Message<"book.v1.SyncAllResponse"> & {
};

/**
 * Describes the message book.v1.SyncAllResponse.
 * Use `create(SyncAllResponseSchema)` to create a new message.
 */
export declare const SyncAllResponseSchema: GenMessage<SyncAllResponse>;

/**
 * @generated from message book.v1.StopSyncRequest
 */
export declare type StopSyncRequest = Message<"book.v1.StopSyncRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.StopSyncRequest.
 * Use `create(StopSyncRequestSchema)` to create a new message.
 */
export declare const StopSyncRequestSchema: GenMessage<StopSyncRequest>;

/**
 * @generated from message book.v1.StopSyncResponse
 */
export declare type StopSyncResponse = Message<"book.v1.StopSyncResponse"> & {
};

/**
 * Describes the message book.v1.StopSyncResponse.
 * Use `create(StopSyncResponseSchema)` to create a new message.
 */
export declare const StopSyncResponseSchema: GenMessage<StopSyncResponse>;

/**
 * @generated from message book.v1.SyncStatusRequest
 */
export declare type SyncStatusRequest = Message<"book.v1.SyncStatusRequest"> & {
};

/**
 * Describes the message book.v1.SyncStatusRequest.
 * Use `create(SyncStatusRequestSchema)` to create a new message.
 */
export declare const SyncStatusRequestSchema: GenMessage<SyncStatusRequest>;

/**
 * @generated from message book.v1.SyncStatusResponse
 */
export declare type SyncStatusResponse = Message<"book.v1.SyncStatusResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: book.v1.BookJobStatus status = 3;
   */
  status: BookJobStatus;
};

/**
 * Describes the message book.v1.SyncStatusResponse.
 * Use `create(SyncStatusResponseSchema)` to create a new message.
 */
export declare const SyncStatusResponseSchema: GenMessage<SyncStatusResponse>;

/**
 * @generated from message book.v1.DownloadBookRequest
 */
export declare type DownloadBookRequest = Message<"book.v1.DownloadBookRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message book.v1.DownloadBookRequest.
 * Use `create(DownloadBookRequestSchema)` to create a new message.
 */
export declare const DownloadBookRequestSchema: GenMessage<DownloadBookRequest>;

/**
 * @generated from message book.v1.DownloadBookResponse
 */
export declare type DownloadBookResponse = Message<"book.v1.DownloadBookResponse"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;
};

/**
 * Describes the message book.v1.DownloadBookResponse.
 * Use `create(DownloadBookResponseSchema)` to create a new message.
 */
export declare const DownloadBookResponseSchema: GenMessage<DownloadBookResponse>;

/**
 * @generated from enum book.v1.BookJobStatus
 */
export enum BookJobStatus {
  /**
   * @generated from enum value: BOOK_JOB_STATUS_DONE_UNSPECIFIED = 0;
   */
  DONE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: BOOK_JOB_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: BOOK_JOB_STATUS_RUNNING = 2;
   */
  RUNNING = 2,
}

/**
 * Describes the enum book.v1.BookJobStatus.
 */
export declare const BookJobStatusSchema: GenEnum<BookJobStatus>;

/**
 * @generated from service book.v1.BookService
 */
export declare const BookService: GenService<{
  /**
   * @generated from rpc book.v1.BookService.CreateBook
   */
  createBook: {
    methodKind: "unary";
    input: typeof CreateBookRequestSchema;
    output: typeof CreateBookResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.UpdateBook
   */
  updateBook: {
    methodKind: "unary";
    input: typeof UpdateBookRequestSchema;
    output: typeof UpdateBookResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.DeleteBook
   */
  deleteBook: {
    methodKind: "unary";
    input: typeof DeleteBookRequestSchema;
    output: typeof DeleteBookResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.DeleteChapter
   */
  deleteChapter: {
    methodKind: "unary";
    input: typeof DeleteChapterRequestSchema;
    output: typeof DeleteChapterResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.GetBook
   */
  getBook: {
    methodKind: "unary";
    input: typeof GetBookRequestSchema;
    output: typeof GetBookResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.GetToc
   */
  getToc: {
    methodKind: "unary";
    input: typeof GetTocRequestSchema;
    output: typeof GetTocResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.GetChapter
   */
  getChapter: {
    methodKind: "unary";
    input: typeof GetChapterRequestSchema;
    output: typeof GetChapterResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.ListBook
   */
  listBook: {
    methodKind: "unary";
    input: typeof ListBookRequestSchema;
    output: typeof ListBookResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.SyncNew
   */
  syncNew: {
    methodKind: "unary";
    input: typeof SyncNewRequestSchema;
    output: typeof SyncNewResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.SyncAll
   */
  syncAll: {
    methodKind: "unary";
    input: typeof SyncAllRequestSchema;
    output: typeof SyncAllResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.StopSync
   */
  stopSync: {
    methodKind: "unary";
    input: typeof StopSyncRequestSchema;
    output: typeof StopSyncResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.SyncStatus
   */
  syncStatus: {
    methodKind: "server_streaming";
    input: typeof SyncStatusRequestSchema;
    output: typeof SyncStatusResponseSchema;
  },
  /**
   * @generated from rpc book.v1.BookService.DownloadBook
   */
  downloadBook: {
    methodKind: "unary";
    input: typeof DownloadBookRequestSchema;
    output: typeof DownloadBookResponseSchema;
  },
}>;


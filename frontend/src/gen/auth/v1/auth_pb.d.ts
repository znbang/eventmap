// @generated by protoc-gen-es v2.2.4 with parameter "target=js+dts"
// @generated from file auth/v1/auth.proto (package auth.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file auth/v1/auth.proto.
 */
export declare const file_auth_v1_auth: GenFile;

/**
 * @generated from message auth.v1.Provider
 */
export declare type Provider = Message<"auth.v1.Provider"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message auth.v1.Provider.
 * Use `create(ProviderSchema)` to create a new message.
 */
export declare const ProviderSchema: GenMessage<Provider>;

/**
 * @generated from message auth.v1.ListProviderRequest
 */
export declare type ListProviderRequest = Message<"auth.v1.ListProviderRequest"> & {
};

/**
 * Describes the message auth.v1.ListProviderRequest.
 * Use `create(ListProviderRequestSchema)` to create a new message.
 */
export declare const ListProviderRequestSchema: GenMessage<ListProviderRequest>;

/**
 * @generated from message auth.v1.ListProviderResponse
 */
export declare type ListProviderResponse = Message<"auth.v1.ListProviderResponse"> & {
  /**
   * @generated from field: repeated auth.v1.Provider providers = 1;
   */
  providers: Provider[];
};

/**
 * Describes the message auth.v1.ListProviderResponse.
 * Use `create(ListProviderResponseSchema)` to create a new message.
 */
export declare const ListProviderResponseSchema: GenMessage<ListProviderResponse>;

/**
 * @generated from message auth.v1.GetUserRequest
 */
export declare type GetUserRequest = Message<"auth.v1.GetUserRequest"> & {
};

/**
 * Describes the message auth.v1.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export declare const GetUserRequestSchema: GenMessage<GetUserRequest>;

/**
 * @generated from message auth.v1.GetUserResponse
 */
export declare type GetUserResponse = Message<"auth.v1.GetUserResponse"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;
};

/**
 * Describes the message auth.v1.GetUserResponse.
 * Use `create(GetUserResponseSchema)` to create a new message.
 */
export declare const GetUserResponseSchema: GenMessage<GetUserResponse>;

/**
 * @generated from message auth.v1.LogoutRequest
 */
export declare type LogoutRequest = Message<"auth.v1.LogoutRequest"> & {
};

/**
 * Describes the message auth.v1.LogoutRequest.
 * Use `create(LogoutRequestSchema)` to create a new message.
 */
export declare const LogoutRequestSchema: GenMessage<LogoutRequest>;

/**
 * @generated from message auth.v1.LogoutResponse
 */
export declare type LogoutResponse = Message<"auth.v1.LogoutResponse"> & {
};

/**
 * Describes the message auth.v1.LogoutResponse.
 * Use `create(LogoutResponseSchema)` to create a new message.
 */
export declare const LogoutResponseSchema: GenMessage<LogoutResponse>;

/**
 * @generated from service auth.v1.AuthService
 */
export declare const AuthService: GenService<{
  /**
   * @generated from rpc auth.v1.AuthService.ListProvider
   */
  listProvider: {
    methodKind: "unary";
    input: typeof ListProviderRequestSchema;
    output: typeof ListProviderResponseSchema;
  },
  /**
   * @generated from rpc auth.v1.AuthService.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof GetUserResponseSchema;
  },
  /**
   * @generated from rpc auth.v1.AuthService.Logout
   */
  logout: {
    methodKind: "unary";
    input: typeof LogoutRequestSchema;
    output: typeof LogoutResponseSchema;
  },
}>;

